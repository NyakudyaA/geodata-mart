# Generated by Django 3.2.13 on 2022-07-05 22:41

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vendors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthDbFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('file_object', models.FileField(help_text='QGIS Auth Database', storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./configs/authdb', verbose_name='QGIS Auth Database')),
            ],
            options={
                'verbose_name': 'QGIS Auth Database',
                'verbose_name_plural': 'QGIS Auth Databases',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='MetaTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=20, verbose_name='Tag Short Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Tag Full Name')),
                ('abstract', models.CharField(max_length=255, verbose_name='Abstract')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('related', models.ManyToManyField(blank=True, related_name='_maps_metatags_related_+', to='maps.MetaTags')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='PgServiceFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('file_object', models.FileField(help_text='PostgreSQL Service File', storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./configs/pgservice', verbose_name='PostgreSQL Service File')),
            ],
            options={
                'verbose_name': 'PostgreSQL Service File',
                'verbose_name_plural': 'PostgreSQL Service Files',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='QgisProjectFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('state', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Processed'), (2, 'Active'), (3, 'Deactivated'), (4, 'Hidden'), (5, 'Deprecated'), (6, 'Archived'), (7, 'Removed'), (8, 'Error'), (9, 'Other')], default=0)),
                ('file_object', models.FileField(blank=True, help_text='QGIS project file used for processing sources', null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./projects', verbose_name='QGIS project file')),
            ],
            options={
                'verbose_name': 'QGIS Project File',
                'verbose_name_plural': 'QGIS Project Files',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='QgisIniFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('file_object', models.FileField(help_text='QGIS Configuration File', storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./configs/qgis', verbose_name='QGIS Configuration File')),
            ],
            options={
                'verbose_name': 'QGIS Configuration File',
                'verbose_name_plural': 'QGIS Configuration Files',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255, verbose_name='Project Name')),
                ('type', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Other'), (2, 'QGIS'), (3, 'PostGIS')], default=2)),
                ('state', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Processed'), (2, 'Active'), (3, 'Deactivated'), (4, 'Hidden'), (5, 'Deprecated'), (6, 'Archived'), (7, 'Removed'), (8, 'Error'), (9, 'Other')], default=0)),
                ('cost', models.FloatField(default=0.0, verbose_name='Unit Cost')),
                ('max_area', models.FloatField(blank=True, default=None, null=True, verbose_name='Maximum Processing Area')),
                ('coverage', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, default=None, null=True, srid=4326, verbose_name='Project Coverage Region')),
                ('image', models.ImageField(upload_to='images/projects')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('config_auth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maps.authdbfile', verbose_name='QGIS Auth DB')),
                ('config_pgservice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maps.pgservicefile', verbose_name='PG Service File')),
                ('config_qgis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='maps.qgisinifile', verbose_name='QGIS Configuration File')),
                ('project_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.qgisprojectfile', verbose_name='Project File')),
                ('siblings', models.ManyToManyField(blank=True, related_name='_maps_project_siblings_+', to='maps.Project')),
                ('tags', models.ManyToManyField(blank=True, to='maps.MetaTags')),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor', verbose_name='Data Vendor')),
            ],
            options={
                'ordering': ['vendor_id', 'updated_date', 'created_date', 'project_name', 'project_file'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingScriptFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('file_object', models.FileField(help_text='QGIS Processing Script', storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./processing/scripts', verbose_name='QGIS Processing Script')),
            ],
            options={
                'verbose_name': 'QGIS Processing Script',
                'verbose_name_plural': 'QGIS Processing Scripts',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ProcessingModelFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('file_object', models.FileField(help_text='QGIS Processing Model', storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./processing/models', verbose_name='QGIS Processing Model')),
            ],
            options={
                'verbose_name': 'QGIS Processing Model',
                'verbose_name_plural': 'QGIS Processing Models',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=20, verbose_name='Layer Short Name')),
                ('layer_name', models.CharField(max_length=255, verbose_name='Layer Name')),
                ('abstract', models.CharField(max_length=255, verbose_name='Layer Abstract')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('cost', models.FloatField(default=0.0, verbose_name='Layer Cost')),
                ('cost_modifier', models.FloatField(default=1.0, verbose_name='Layer Cost Modifier')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Layer Description')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('state', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Processed'), (2, 'Active'), (3, 'Deactivated'), (4, 'Hidden'), (5, 'Deprecated'), (6, 'Archived'), (7, 'Removed'), (8, 'Error'), (9, 'Other')], default=0)),
                ('lyr_group', models.CharField(max_length=20, verbose_name='Layer Group')),
                ('lyr_class', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Standard'), (2, 'Base'), (3, 'Exclude'), (4, 'Other')], default=0)),
                ('lyr_type', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Vector'), (2, 'Raster'), (3, 'Mesh'), (4, 'WMS'), (5, 'XYZ'), (6, 'WFS'), (7, 'Vector Tile'), (8, 'Table'), (9, 'Other')], default=0)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='maps.project', verbose_name='Project')),
                ('siblings', models.ManyToManyField(blank=True, related_name='_maps_layer_siblings_+', to='maps.Layer')),
                ('tags', models.ManyToManyField(blank=True, to='maps.MetaTags')),
            ],
            options={
                'verbose_name': 'Project Layer',
                'verbose_name_plural': 'Project Layers',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(default='e20147c2d42b43699c0def3e6e7e7caf', max_length=32, verbose_name='Job ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('state', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'Abandoned'), (2, 'Unfulfilled'), (3, 'Processed'), (4, 'Completed'), (5, 'Failed'), (6, 'Processing'), (7, 'Unknown'), (8, 'Stale'), (9, 'Other')], default=0)),
                ('parameters', models.JSONField(verbose_name='Request Parameters')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('layers', models.ManyToManyField(blank=True, to='maps.Layer', verbose_name='Map Layers')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='maps.project', verbose_name='Project')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Geodata Mart Processing Job',
                'verbose_name_plural': 'Geodata Mart Processing Jobs',
            },
        ),
        migrations.CreateModel(
            name='ResultFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('version', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('file_object', models.FileField(blank=True, help_text='Resulting output file from processing jobs', null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/geodata/assets', location='/qgis'), upload_to='./output', verbose_name='Results File')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='maps.job', verbose_name='Job')),
            ],
            options={
                'verbose_name': 'Result File',
                'verbose_name_plural': 'Result Files',
                'abstract': False,
                'unique_together': {('file_name', 'version')},
            },
        ),
    ]
